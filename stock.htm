<!doctype html>
<html lang="en-US">
<head>
<title>HTML5 Local Storage Project</title>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
<meta name="rating" content="General">
<meta name="expires" content="never">
<meta name="language" content="English, EN">
<meta name="description" content="Shopping cart project with HTML5 and JavaScript">
<meta name="keywords" content="HTML5,CSS,JavaScript, html5 session storage, html5 local storage">
<meta name="author" content="dcwebmakers.com">
<script src="Storage.js"></script>
<link rel="stylesheet" href="StorageStyle.css">

<style type="text/css">
.grid-container {
    display: grid;
    grid-template-columns: 240px 1fr;
    grid-template-rows: 50px 1fr 50px;
    grid-template-areas:
        "sidenav header"
        "sidenav main"
        "sidenav footer";
    height: 100vh;
}

/* Give every child element its grid name */
.header {
    grid-area: header;
    background-color: #648ca6;
}

.sidenav {
    grid-area: sidenav;
    background-color: #394263;
}

.main {
    grid-area: main;
    background-color: #8fd4d9;
}

.footer {
    grid-area: footer;
    background-color: #648ca6;
}
.sidenav {
        display: flex; /* Will be hidden on mobile */
        flex-direction: column;
        grid-area: sidenav;
        background-color: #394263;
    }

    .sidenav__list {
        padding: 0;
        margin-top: 85px;
        list-style-type: none;
    }

    .sidenav__list-item {
        padding: 20px 20px 20px 40px;
        color: #ddd;
    }

    .sidenav__list-item:hover {
        background-color: rgba(255, 255, 255, 0.2);
        cursor: pointer;
    }
header, .footer {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 0 16px;
        background-color: #648ca6;
    }
.main-header {
        display: flex;
        justify-content: space-between;
        margin: 20px;
        padding: 20px;
        height: 150px; /* Force our height since we don't have actual content yet */
        background-color: #e3e4e6;
        color: slategray;
    }
.grid-container {
        display: grid;
        grid-template-columns: 1fr; /* Side nav is hidden on mobile */
        grid-template-rows: 50px 1fr 50px;
        grid-template-areas:
            'header'
            'main'
            'footer';
        height: 100vh;
    }

    .sidenav {
        display: none;
        grid-area: sidenav;
        background-color: #394263;
    }

    .main-cards {
        column-count: 1;
        column-gap: 20px;
        margin: 20px;
    }

    /* Non-mobile styles, 750px breakpoint */
    @media only screen and (min-width: 46.875em) {
        /* Show the sidenav */
        .grid-container {
            grid-template-columns: 240px 1fr; /* Show the side nav for non-mobile screens */
            grid-template-areas:
                "sidenav header"
                "sidenav main"
                "sidenav footer";
        }

        .sidenav {
            display: flex;
            flex-direction: column;
        }
    }

    /* Medium-sized screen breakpoint (tablet, 1050px) */
    @media only screen and (min-width: 65.625em) {
        /* Break out main cards into two columns */
        .main-cards {
            column-count: 2;
        }
    }

.card {
        box-shadow: 0 1px 3px 0 rgba(0,0,0,.1), 0 1px 2px 0 rgba(0,0,0,.06);
}

.card {
        position: relative;
        display: flex;
        flex-direction: column;
        min-width: 0;
        word-wrap: break-word;
        background-color: #fff;
        background-clip: border-box;
        border: 0 solid rgba(0,0,0,.125);
        border-radius: .25rem;
}

.card-body {
        flex: 1 1 auto;
        min-height: 1px;
        padding: 1rem;
}

.gutters-sm {
        margin-right: -8px;
        margin-left: -8px;
}

.gutters-sm>.col, .gutters-sm>[class*=col-] {
        padding-right: 8px;
        padding-left: 8px;
}
.mb-3, .my-3 {
        margin-bottom: 1rem!important;
}

.bg-gray-300 {
        background-color: #e2e8f0;
}
.h-100 {
        height: 100%!important;
}
.shadow-none {
        box-shadow: none!important;
}




.menu-icon {
    position: fixed;
    display: flex;
    top: 5px;
    left: 10px;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    z-index: 1;
    cursor: pointer;
    padding: 12px;
    background-color: #DADAE3;
}

/* Make room for the menu icon on mobile */
.header__search {
    margin-left: 42px;
}

/* Mobile-first side nav styles */
.sidenav {
    grid-area: sidenav;
    display: flex;
    flex-direction: column;
    height: 100%;
    width: 240px;
    position: fixed;
    overflow-y: auto;
    box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.16), 0 0 0 1px rgba(0, 0, 0, 0.08);
    z-index: 2; /* Needs to sit above the hamburger menu icon */
    background-color: #394263;
    transform: translateX(-245px);
    transition: all .6s ease-in-out;
}

/* The active class is toggled on hamburger and close icon clicks */
.sidenav.active {
    transform: translateX(0);
}

/* Only visible on mobile screens */
.sidenav__close-icon {
    position: absolute;
    visibility: visible;
    top: 8px;
    right: 12px;
    cursor: pointer;
    font-size: 20px;
    color: #ddd;
}

/* Non-mobile styles for side nav responsiveness, 750px breakpoint */
@media only screen and (min-width: 46.875em) {
    .sidenav {
        position: relative; /* Fixed position on mobile */
        transform: translateX(0);
    }

    .sidenav__close-icon {
        visibility: hidden;
    }
}
          .navigation {
  width: 100%;
  background-color: black;
}

img {
  width: 25px;
  border-radius: 50px;
  float: left;
}

.logout {
  font-size: .8em;
  font-family: 'Oswald', sans-serif;
	position: relative;
  right: -18px;
  bottom: -4px;
  overflow: hidden;
  letter-spacing: 3px;
  opacity: 0;
  transition: opacity .45s;
  -webkit-transition: opacity .35s;

}

.button {
	text-decoration: none;
	float: right;
  padding: 12px;
  margin: 15px;
  color: white;
  width: 25px;
  background-color: black;
  transition: width .35s;
  -webkit-transition: width .35s;
  overflow: hidden
}

a:hover {
  width: 100px;
}

a:hover .logout{
  opacity: .9;
}

a {
  text-decoration: none;
}



</style>

</head>
<body>

             <div class="grid-container">
  <header class="header">

                <h1 color="white">Stocks</h1>

  </header>

              <div class="menu-icon">
    <i class="fas fa-bars"></i>
  </div>

  <aside class="sidenav">

     <ul class="sidenav__list">
    <li class="sidenav__list-item">UserProfile</li>
    <li class="sidenav__list-item active"><a href="#">Stocks</a></li>
    <li class="sidenav__list-item">help</li>

  </ul>
<div class="sidenav__close-icon">
    <i class="fas fa-times"></i>
  </div>

  </aside>
       <main class="main">
<form name="ShoppingList">
    <fieldset>
        <legend>Shopping cart</legend>
        <label>Item: <input type="text" name="name"></label>
        <label>Quantity: <input type="text" name="data"></label>

        <input type="button" value="Save"   onclick="SaveItem()">
        <input type="button" value="Update" onclick="ModifyItem()">
        <input type="button" value="Delete" onclick="RemoveItem()">
    </fieldset>

       <fieldset>
        <legend>Shopping cart</legend>
        <label>Item: <input type="text" name="name"></label>
        <label>Quantity: <input type="text" name="data"></label>

        <input type="button" value="Save"   onclick="SaveItem()">
        <input type="button" value="Update" onclick="ModifyItem()">
        <input type="button" value="Delete" onclick="RemoveItem()">
    </fieldset>

    <fieldset>
        <legend>Shopping cart</legend>
        <label>Item: <input type="text" name="name"></label>
        <label>Quantity: <input type="text" name="data"></label>

        <input type="button" value="Save"   onclick="SaveItem()">
        <input type="button" value="Update" onclick="ModifyItem()">
        <input type="button" value="Delete" onclick="RemoveItem()">
    </fieldset>

    <fieldset>
        <legend>Shopping cart</legend>
        <label>Item: <input type="text" name="name"></label>
        <label>Quantity: <input type="text" name="data"></label>

        <input type="button" value="Save"   onclick="SaveItem()">
        <input type="button" value="Update" onclick="ModifyItem()">
        <input type="button" value="Delete" onclick="RemoveItem()">
    </fieldset>

    <fieldset>
        <legend>Shopping cart</legend>
        <label>Item: <input type="text" name="name"></label>
        <label>Quantity: <input type="text" name="data"></label>

        <input type="button" value="Save"   onclick="SaveItem()">
        <input type="button" value="Update" onclick="ModifyItem()">
        <input type="button" value="Delete" onclick="RemoveItem()">
    </fieldset>

    <div id="items_table">
        <h2>Shopping List</h2>
        <table id="list"></table>
        <label><input type="button" value="Clear" onclick="ClearAll()">
        * Delete all items</label>
    </div>
</form>
           </main>

       <footer>
  <div class="navigation">

	<a class="button" href="">

  <div class="logout">LOGOUT</div>

	</a>

</div>         </footer>

</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
  <script>
    const menuIconEl = $('.menu-icon');
    const sidenavEl = $('.sidenav');
    const sidenavCloseEl = $('.sidenav__close-icon');

    // Add and remove provided class names
    function toggleClassName(el, className) {
      if (el.hasClass(className)) {
        el.removeClass(className);
      } else {
        el.addClass(className);
      }
    }

    // Open the side nav on click
    menuIconEl.on('click', function() {
      toggleClassName(sidenavEl, 'active');
    });

    // Close the side nav on click
    sidenavCloseEl.on('click', function() {
      toggleClassName(sidenavEl, 'active');
    });
  </script>
</body>
</html>